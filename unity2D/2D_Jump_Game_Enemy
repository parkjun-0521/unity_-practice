using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemyMove : MonoBehaviour
{
    Rigidbody2D rigid;                  // Rigidbody2D 변수 
    public int nextMove;                // 이동할 방향   
    Animator anime;                     // 애니메이션 변수 
    SpriteRenderer spriteRenderer;      // SpriteRenderer 변수 ( Filp을 사용하기 위해 선언 ) 
    CapsuleCollider2D capsuleCollider;

    void Awake()
    {
        // 컴포넌트 초기화 
        rigid = GetComponent<Rigidbody2D>();
        anime = GetComponent<Animator>();
        spriteRenderer = GetComponent<SpriteRenderer>();
        capsuleCollider = GetComponent<CapsuleCollider2D>();

        Invoke("Think",2f);
    }

    
    void Update()
    {
        // Enemy 이동 
        rigid.velocity = new Vector2(nextMove, rigid.velocity.y);

        // 장애물 확인 ( 낭떨어지 확인 ) 
        // 내앞을 확인하기 위한 값 계산 ( 현재 내 위치에서 Think() 함수에서 구했던 random 값을 더해준다. 그러면 내가 가는 방향의 앞에가 구해진다. ) 
        Vector2 frontVec = new Vector2(rigid.position.x + nextMove * 0.3f, rigid.position.y);
        Debug.DrawRay(frontVec, Vector3.down, new Color(0, 0, 1));
        RaycastHit2D rayHit = Physics2D.Raycast(frontVec, Vector3.down, 1, LayerMask.GetMask("Floor"));
        if(rayHit.collider == null) {
            Turn();
        }
    }

    // 낭떨어지를 만났을 때 회전하는 함수 
    void Turn()
    {
        nextMove *= -1;                         // Floor 가 null 이면 방향를 바꿔야 하기 때문에 다음 방향에 -1을 곱해서 방향을 바꿈 
        spriteRenderer.flipX = nextMove == 1;   // 방향을 바꾸면서 스프라이트도 방향을 바꿈 
        CancelInvoke();                         // 실행중인 Invoke 를 중지 ( Invoke() 가 아에 사라지는게 아니라 일시 정지하는거 같음 ) 
        Invoke("Think", 2f);                    // Invoke 다시 실행 
    }

    // 랜덤한 Enemy의 이동방향을 결정 
    void Think()
    {
        // 변수 선언 
        float nextThinkTime = Random.Range(2f, 3.5f);   // 랜덤한 함수 실행 시간 ( Invoke() ) 
        nextMove = Random.Range(-1, 2);                 // 랜덤한 방향 

        // 방향 전환 
        if(nextMove != 0)
            spriteRenderer.flipX = nextMove == 1;

        // 애니메이션 
        anime.SetInteger("WalkSpeed", nextMove);

        // 재귀함수 ( Awake에서 한번 실행 후 계속 자기 자신을 실행 )
        Invoke("Think", nextThinkTime);
    }

    // 데미지 입었을 때 
    public IEnumerator OnDamaged()
    {
        spriteRenderer.color = new Color(1, 1, 1, 0.5f);

        spriteRenderer.flipY = true;

        capsuleCollider.enabled = false;

        nextMove = 0;

        rigid.AddForce(Vector2.up * 5, ForceMode2D.Impulse);

        yield return new WaitForSeconds(5.0f);

        gameObject.SetActive(false);
    }
}

